{
  "publisher": "cogflows",
  "name": "promptcode",
  "displayName": "promptcode",
  "description": "Generate prompt for LLM from your code",
  "version": "0.6.8",
  "license": "SEE LICENSE IN LICENSE",
  "repository": {
    "type": "git",
    "url": "https://github.com/cogflows/promptcode-vscode.git"
  },
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "files": [
    "out/**/*",
    "prompts/**/*",
    "images/**/*",
    "LICENSE",
    "README.md",
    "CONTRIBUTING.md",
    "CODE_OF_CONDUCT.md",
    "SECURITY.md"
  ],
  "contributes": {
    "commands": [
      {
        "command": "promptcode.showFileSelector",
        "title": "PromptCode: Show Files"
      },
      {
        "command": "promptcode.generatePrompt",
        "title": "PromptCode: Generate",
        "icon": "$(play)"
      },
      {
        "command": "promptcode.selectAll",
        "title": "PromptCode: Select All Files",
        "icon": "$(check-all)"
      },
      {
        "command": "promptcode.deselectAll",
        "title": "PromptCode: Clear Selection",
        "icon": "$(clear-all)"
      },
      {
        "command": "promptcode.copyToClipboard",
        "title": "PromptCode: Copy to Clipboard"
      },
      {
        "command": "promptcode.showPromptCodeView",
        "title": "PromptCode: Show Interface"
      },
      {
        "command": "promptcode.clearTokenCache",
        "title": "PromptCode: Clear Cache",
        "icon": "$(clear-all)"
      },
      {
        "command": "promptcode.refreshFileExplorer",
        "title": "PromptCode: Refresh File Explorer",
        "icon": "$(refresh)"
      },
      {
        "command": "promptcode.copyFilePath",
        "title": "Copy Path"
      },
      {
        "command": "promptcode.copyRelativeFilePath",
        "title": "Copy Relative Path"
      },
      {
        "command": "promptcode.openFileInEditor",
        "title": "Open in Editor"
      },
      {
        "command": "promptcode.revealFirstSearchMatch",
        "title": "PromptCode: Reveal First Search Match"
      },
      {
        "command": "promptcode.addToPromptCodeSelection",
        "title": "Add to PromptCode"
      }
    ],
    "configuration": {
      "title": "PromptCode",
      "properties": {
        "promptcode.respectGitignore": {
          "type": "boolean",
          "default": true,
          "description": "Whether to respect .gitignore rules when scanning files"
        },
        "promptcode.ignorePatterns": {
          "type": "string",
          "default": "",
          "description": "[Deprecated] Use .promptcode_ignore file at workspace root instead. Custom patterns to ignore when scanning files (one per line)"
        },
        "promptcode.includeBuiltInTemplates": {
          "type": "boolean",
          "default": true,
          "description": "Include built-in prompt templates in the PromptCode UI"
        },
        "promptcode.promptFolders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            ".promptcode/prompts",
            ".cursor/rules",
            ".github/copilot-instructions.md",
            ".zed/",
            ".windsurfrules",
            ".clinerules",
            ".ai-rules/",
            "ai-docs/"
          ],
          "description": "Additional folders/files to scan for prompt templates"
        },
        "promptcode.enableTelemetry": {
          "type": "boolean",
          "default": true,
          "description": "Enable sending anonymous usage data to help improve the extension (respects VS Code's telemetry settings)"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "promptcode-explorer",
          "title": "PromptCode",
          "icon": "$(file-code)"
        }
      ]
    },
    "views": {
      "promptcode-explorer": [
        {
          "id": "promptcodeExplorer",
          "name": "Files"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "promptcode.selectAll",
          "when": "view == promptcodeExplorer",
          "group": "navigation@1"
        },
        {
          "command": "promptcode.deselectAll",
          "when": "view == promptcodeExplorer",
          "group": "navigation@2"
        },
        {
          "command": "promptcode.generatePrompt",
          "when": "view == promptcodeExplorer",
          "group": "navigation@3"
        },
        {
          "command": "promptcode.clearTokenCache",
          "when": "view == promptcodeExplorer",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "promptcode.openFileInEditor",
          "when": "view == promptcodeExplorer && viewItem == file",
          "group": "navigation@1"
        },
        {
          "command": "promptcode.copyFilePath",
          "when": "view == promptcodeExplorer && (viewItem == file || viewItem == directory)",
          "group": "1_copy@1"
        },
        {
          "command": "promptcode.copyRelativeFilePath",
          "when": "view == promptcodeExplorer && (viewItem == file || viewItem == directory)",
          "group": "1_copy@2"
        }
      ],
      "explorer/context": [
        {
          "command": "promptcode.addToPromptCodeSelection",
          "group": "navigation@5",
          "when": "resourceScheme == file"
        }
      ]
    }
  },
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "vscode:prepublish": "node ./scripts/build.js --minify --publish",
    "compile": "node ./scripts/build.js",
    "watch": "node ./scripts/watch.js",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "test:unit": "npm run compile && npm run compile:tests && node ./out/test/runTests.js",
    "test:extension": "npm run compile && npm run compile:tests && node ./out/test/runTests.js",
    "test:webview": "playwright test -c playwright.config.ts",
    "test:core": "cd packages/core && npm test",
    "test:cli": "cd packages/cli && bun test",
    "test:all": "npm run lint && npm run test:core && npm run test:cli && npm run test:unit && npm run test:webview",
    "compile:tests": "node ./scripts/build-tests.js",
    "build:prod": "node ./scripts/build.js --minify --publish",
    "build:dev": "node ./scripts/build.js",
    "build:cli": "cd packages/cli && bun run build",
    "build:core": "cd packages/core && npm run build",
    "package": "vsce package"
  },
  "devDependencies": {
    "@playwright/test": "^1.52.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/codicons": "^0.0.36",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.6.0",
    "esbuild": "^0.25.1",
    "eslint": "^9.21.0",
    "glob": "^11.0.3",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@promptcode/core": "workspace:*",
    "@types/uuid": "^10.0.0",
    "@vscode/extension-telemetry": "^0.9.8",
    "fast-glob": "^3.3.2",
    "lru-cache": "^11.1.0",
    "uuid": "^11.1.0"
  }
}
